{
    "name": "backend",
    "version": "1.0.0",
    "main": "index.js",
    "license": "MIT",
    "scripts": {
        "prebuild": "rimraf dist",
        "build": "tsc -p tsconfig.build.json",
        "start": "tsc && node dist/src/index.js",
        "lint:check": "eslint \"{src,test}/**/*.ts\"",
        "test": "jest",
        "test:unit": "jest --config jest.unit.config.js",
        "test:integration": "jest --config ./test/config/jest.integration.config.js",
        "test:unified": "jest --config ./test/config/jest.unified.config.js",
        "test:cov": "jest --config ./test/config/jest.unified.config.js --coverage",
        "docker:build": "docker compose up --build -d",
        "docker:up": "docker compose up",
        "docker:down": "docker compose down"
    },
    "dependencies": {
        "cpf-cnpj-validator": "^1.0.3",
        "dotenv": "^8.2.0",
        "express": "^4.17.1",
        "mongoose": "^5.10.9"
    },
    "devDependencies": {
        "@types/express": "^4.17.8",
        "@types/jest": "^29.5.12",
        "@types/mongoose": "^5.7.36",
        "@types/supertest": "^6.0.2",
        "@typescript-eslint/eslint-plugin": "^6.0.0",
        "@typescript-eslint/parser": "^6.0.0",
        "eslint": "^8.42.0",
        "eslint-config-prettier": "^9.0.0",
        "eslint-plugin-prettier": "^5.0.0",
        "jest": "^29.7.0",
        "supertest": "^7.0.0",
        "ts-jest": "^29.1.5",
        "ts-node": "^8.10.2",
        "typescript": "^4.0.5"
    },
    "jest": {
        "moduleFileExtensions": [
            "ts",
            "js",
            "json"
        ],
        "rootDir": ".",
        "testRegex": ".*\\.spec\\.ts$",
        "transform": {
            "^.+\\.(t|j)s$": "ts-jest"
        },
        "collectCoverageFrom": [
            "<rootDir>/src/**/*.(t|j)s"
        ],
        "coverageDirectory": "./coverage",
        "coverageThreshold": {
            "global": {
                "branches": 1,
                "lines": 1
            }
        },
        "testEnvironment": "node",
        "roots": [
            "<rootDir>/src/",
            "<rootDir>/test/"
        ],
        "moduleNameMapper": {
            "^src/(.*)$": "<rootDir>/src/$1"
        }
    }
}